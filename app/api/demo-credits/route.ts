import { NextRequest, NextResponse } from "next/server";

export async function POST(req: NextRequest) {
  try {
    console.log("üé¨ ÂºÄÂßãÊºîÁ§∫ÁßØÂàÜÁ≥ªÁªüÊµÅÁ®ã");
    
    const baseUrl = req.nextUrl.origin;
    const steps = [];
    
    // Ê≠•È™§1: Ê£ÄÊü•ÂΩìÂâçÁßØÂàÜÁä∂ÊÄÅ
    console.log("\nüìä Ê≠•È™§1: Ê£ÄÊü•ÂΩìÂâçÁßØÂàÜÁä∂ÊÄÅ");
    
    const creditsResponse = await fetch(`${baseUrl}/api/creem/user-credits`, {
      headers: {
        'Cookie': req.headers.get('cookie') || ''
      }
    });
    
    let currentCredits = 0;
    if (creditsResponse.ok) {
      const creditsData = await creditsResponse.json();
      currentCredits = creditsData.credits || 0;
      console.log(`ÂΩìÂâçÁßØÂàÜ: ${currentCredits}`);
      
      steps.push({
        step: 1,
        action: "Ê£ÄÊü•ÂΩìÂâçÁßØÂàÜ",
        result: `ÂΩìÂâçÁßØÂàÜ: ${currentCredits}`,
        data: creditsData
      });
    } else {
      const errorText = await creditsResponse.text();
      console.log(`Ëé∑ÂèñÁßØÂàÜÂ§±Ë¥•: ${errorText}`);
      
      steps.push({
        step: 1,
        action: "Ê£ÄÊü•ÂΩìÂâçÁßØÂàÜ",
        result: `Â§±Ë¥•: ${errorText}`,
        error: true
      });
    }
    
    // Ê≠•È™§2: ÊµãËØïÁßØÂàÜÊâ£Ë¥πÔºàÂ¶ÇÊûúÊúâË∂≥Â§üÁßØÂàÜÔºâ
    if (currentCredits >= 10) {
      console.log("\nüé® Ê≠•È™§2: ÊµãËØïÂèëÂûãÁîüÊàêÊâ£Ë¥πÔºà10ÁßØÂàÜÔºâ");
      
      const consumeResponse = await fetch(`${baseUrl}/api/creem/user-credits`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Cookie': req.headers.get('cookie') || ''
        },
        body: JSON.stringify({
          action: 'consume',
          amount: 10,
          trans_type: 'hairstyle'
        })
      });
      
      if (consumeResponse.ok) {
        const consumeData = await consumeResponse.json();
        console.log(`Êâ£Ë¥πÊàêÂäü: ${consumeData.message}`);
        console.log(`Ââ©‰ΩôÁßØÂàÜ: ${consumeData.remainingCredits}`);
        
        steps.push({
          step: 2,
          action: "ÊµãËØïÊâ£Ë¥π10ÁßØÂàÜ",
          result: `Êâ£Ë¥πÊàêÂäüÔºåÂâ©‰ΩôÁßØÂàÜ: ${consumeData.remainingCredits}`,
          data: consumeData
        });
        
        // Ê≠•È™§3: ÂÜçÊ¨°Ê£ÄÊü•ÁßØÂàÜÁä∂ÊÄÅ
        console.log("\nüìà Ê≠•È™§3: Ê£ÄÊü•Êâ£Ë¥πÂêéÁöÑÁßØÂàÜÁä∂ÊÄÅ");
        
        const afterConsumeResponse = await fetch(`${baseUrl}/api/creem/user-credits`, {
          headers: {
            'Cookie': req.headers.get('cookie') || ''
          }
        });
        
        if (afterConsumeResponse.ok) {
          const afterConsumeData = await afterConsumeResponse.json();
          console.log(`Êâ£Ë¥πÂêéÁßØÂàÜ: ${afterConsumeData.credits}`);
          
          steps.push({
            step: 3,
            action: "Ê£ÄÊü•Êâ£Ë¥πÂêéÁßØÂàÜ",
            result: `ÁßØÂàÜÂèòÂåñ: ${currentCredits} ‚Üí ${afterConsumeData.credits} (Êâ£Èô§‰∫Ü ${currentCredits - afterConsumeData.credits})`,
            data: afterConsumeData
          });
        }
        
      } else {
        const errorText = await consumeResponse.text();
        console.log(`Êâ£Ë¥πÂ§±Ë¥•: ${errorText}`);
        
        steps.push({
          step: 2,
          action: "ÊµãËØïÊâ£Ë¥π10ÁßØÂàÜ",
          result: `Â§±Ë¥•: ${errorText}`,
          error: true
        });
      }
    } else {
      console.log("\n‚ö†Ô∏è  ÁßØÂàÜ‰∏çË∂≥ÔºåË∑≥ËøáÊâ£Ë¥πÊµãËØï");
      
      steps.push({
        step: 2,
        action: "ÊµãËØïÊâ£Ë¥π",
        result: `ÁßØÂàÜ‰∏çË∂≥ÔºàÂΩìÂâç: ${currentCredits}, ÈúÄË¶Å: 10ÔºâÔºåË∑≥ËøáÊµãËØï`,
        skipped: true
      });
    }
    
    // Ê≠•È™§4: ÊºîÁ§∫Ê∑ªÂä†ÁßØÂàÜÂäüËÉΩ
    console.log("\nüí∞ Ê≠•È™§4: ÊºîÁ§∫Ê∑ªÂä†ÁßØÂàÜÂäüËÉΩÔºàÊµãËØïÁî®Ôºâ");
    
    const addResponse = await fetch(`${baseUrl}/api/creem/user-credits`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': req.headers.get('cookie') || ''
      },
      body: JSON.stringify({
        action: 'add',
        amount: 50,
        trans_type: 'bonus',
        order_no: `demo_${Date.now()}`
      })
    });
    
    if (addResponse.ok) {
      const addData = await addResponse.json();
      console.log(`Ê∑ªÂä†ÁßØÂàÜÊàêÂäü: ${addData.message}`);
      console.log(`Êñ∞ÁöÑÊÄªÁßØÂàÜ: ${addData.totalCredits}`);
      
      steps.push({
        step: 4,
        action: "Ê∑ªÂä†50ÁßØÂàÜÔºàÂ•ñÂä±Ôºâ",
        result: `Ê∑ªÂä†ÊàêÂäüÔºåÊñ∞ÊÄªÁßØÂàÜ: ${addData.totalCredits}`,
        data: addData
      });
    } else {
      const errorText = await addResponse.text();
      console.log(`Ê∑ªÂä†ÁßØÂàÜÂ§±Ë¥•: ${errorText}`);
      
      steps.push({
        step: 4,
        action: "Ê∑ªÂä†ÁßØÂàÜ",
        result: `Â§±Ë¥•: ${errorText}`,
        error: true
      });
    }
    
    // Ê≠•È™§5: ÊúÄÁªàÁßØÂàÜÁä∂ÊÄÅ
    console.log("\nüìä Ê≠•È™§5: ÊúÄÁªàÁßØÂàÜÁä∂ÊÄÅ");
    
    const finalResponse = await fetch(`${baseUrl}/api/creem/user-credits`, {
      headers: {
        'Cookie': req.headers.get('cookie') || ''
      }
    });
    
    if (finalResponse.ok) {
      const finalData = await finalResponse.json();
      console.log(`ÊúÄÁªàÁßØÂàÜ: ${finalData.credits}`);
      console.log(`Ê¥ªË∑ÉËÆ¢ÈòÖ: ${finalData.hasActiveSubscription ? 'ÊòØ' : 'Âê¶'}`);
      
      steps.push({
        step: 5,
        action: "Ê£ÄÊü•ÊúÄÁªàÁä∂ÊÄÅ",
        result: `ÊúÄÁªàÁßØÂàÜ: ${finalData.credits}, Ê¥ªË∑ÉËÆ¢ÈòÖ: ${finalData.hasActiveSubscription ? 'ÊòØ' : 'Âê¶'}`,
        data: finalData
      });
    }
    
    console.log("\nüéâ ÁßØÂàÜÁ≥ªÁªüÊºîÁ§∫ÂÆåÊàê!");
    
    return NextResponse.json({
      success: true,
      message: "ÁßØÂàÜÁ≥ªÁªüÊºîÁ§∫ÂÆåÊàê",
      summary: {
        totalSteps: steps.length,
        completedSteps: steps.filter(s => !s.error && !s.skipped).length,
        failedSteps: steps.filter(s => s.error).length,
        skippedSteps: steps.filter(s => s.skipped).length
      },
      steps: steps
    });
    
  } catch (error) {
    console.error("‚ùå ÊºîÁ§∫Â§±Ë¥•:", error);
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : "Unknown error"
    }, { status: 500 });
  }
} 